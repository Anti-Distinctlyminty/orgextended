* 1.1.29
   Core Idea: Add GNU Plot Script Blocks

   - [x] Add a syntax for gnu plot script blocks if one does not already exist
   - [x] Add a src handler to execute these script blocks.
** Spreadsheets Preview V13

    - Fixed a bug with TBLFM appearing after a END marker on dynamic blocks
    - Fixed a bug with if statements and equals signs in TBLFM blocks
    - Fixed a bug with tables where it would look up the properties on the root node of the file.
      this would cause an assert.

** GNU Plot Script Block

   We now have a GNU Plot script block and source handler.
   We have a very limited set of source hanlders.

   Here is some gnu plot code that draws a sine wave if executed and
   gnuplot can be found in your settings file. The requirements are the
   same as those for table plotting.
   #+BEGIN_SRC gnuplot :file gantt-table.png
    # We don't need a key (or legend) for this simple graph.
    set key off
 
    # Set the title for the graph.
    set title "Sine against Phase"
  
    # We want the graph to cover a full sine wave.
    set xrange [0:6.28]
  
    # Set the label for the X axis.
    set xlabel "Phase (radians)"
  
    # Draw a horizontal centreline.
    set xzeroaxis
  
    # Pure sine wave amplitude ranges from +1 to -1.
    set yrange [-1:1]
  
    # No tick-marks are needed for the Y-axis .
    unset ytics
  
    # Plot the curve.
    plot sin(x) 
   #+END_SRC

  #+RESULTS:
  [[file:gantt-table.png]]

  - Params for src blocks have been converted to use the new PList system added in 1.1.28
  - Source Blocks now have a PreProcessSourceFile() method that allows for injection of file and other paramters into the source block.

  - GNU Plot is the first module to start implementing the data source mechanism:
    The following example generates a graphed line line by feeding the data in my-table into gnu plot using babel like
    mechanics. NOTE: Babel is in its infancy in our system. We have source handlers for python, powershell, gnuplot, ditaa, plantuml, graphviz and that is it.
    ONLY GNU Plot can read from tables at this time. This will change.

  #+NAME: my-table
  | 1 | 2 |
  | 2 | 3 |
  | 3 | 4 |

   #+BEGIN_SRC gnuplot :var DATA=my-table :file my-table.png
    plot "$DATA" using 1:2 with lines title "hello"
   #+END_SRC

  #+RESULTS:
  [[file:my-table.png]] 


** Powershell Block Execute Bug
	- this was using the OrgExtended package dir as it's cwd
	  which was causing problems when running as a package. FIXED.

